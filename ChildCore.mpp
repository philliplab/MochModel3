parameters
{
	CHILD_MODEL_TYPE ChildModelType;
};

classification CHILD_MODEL_TYPE
{
	SCHOOLING
};

classification GENDER
{
	M, F
};

actor_set Child asAllChild; //EN All Child actors

actor Child            //EN Individual
{
	REPORT_TIME report_time = { 0 };
	DISEASE_STATE mother_disease_status_fm = {HEALTHY};
	logical mother_showing_symptoms = {FALSE};
	GENDER gender;
	LIFE integer_age = self_scheduling_int(age);

	void Mother_Infect();
	void Mother_Die();
	void Mother_Symptoms();
	void Mother_Treat();
	void Start();
	void Finish();
};

void Child::Mother_Infect()
{
	mother_disease_status_fm = INFECTED;
};

void Child::Mother_Die()
{
	mother_disease_status_fm = DEAD;
};

void Child::Mother_Symptoms()
{
	mother_showing_symptoms = TRUE;
};

void Child::Mother_Treat()
{
	mother_disease_status_fm = TREATED;
	mother_showing_symptoms = FALSE;
};

void Child::Start()
{
	age = 0;
	if (RandUniform(15) > 0.5){
		gender = M;
	} else {
		gender = F;
	};
};

void Child::Finish()
{
};
