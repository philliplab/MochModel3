parameters 
{
	double		CHealthyMortScale;
	double		CHealthyMortShape;
};

parameter_group ChildMortality
{ //EN Mothers' Mortality Parameters
	CHealthyMortShape, CHealthyMortScale
};

actor Child            //EN Individual
{
	logical alive = {TRUE};
	event timeMortalityEvent, MortalityEvent;	//EN Mortality event
};

double InvWeibull3(double y, double kappa, double lambda, double phi)
{
	// Lambda is Scale and Kappa is Shape
	double x = 0;
	if (phi == 1000){ // SIGH - this is not a pretty hack - no construct like R's Inf in C++?
		x = pow(10, 10);
	} else
	{
		x = (phi * lambda) * pow(-log(y), 1/kappa);
	};
	return(x);
};

TIME Child::timeMortalityEvent()
{
	TIME tEventTime = TIME_INFINITE;
	double draw = RandUniform(5);
	tEventTime = InvWeibull3(draw, CHealthyMortShape, CHealthyMortScale, 1);
	tEventTime = WAIT(tEventTime);
	return tEventTime;
};

// The implement function of MortalityEvent
void Child::MortalityEvent()
{
	alive = FALSE;
	Finish();
}