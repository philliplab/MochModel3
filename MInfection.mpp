range INCIDENCE_RATES_SOURCE
{
	0,2
};

range INCIDENCE_LIFE
{
	14, 59
};

parameters
{
	INCIDENCE_RATES_SOURCE IncidenceRatesSource;
	double IncidenceRates[INCIDENCE_RATES_SOURCE][LIFE];
	double IncidenceTable[GENDER][INCIDENCE_LIFE][MORT_TIME];
};

parameter_group Incidence
{ //EN Mothers' Mortality Parameters
	IncidenceTable
};

actor Mother            //EN Individual
{
	logical infectible = {FALSE};
	event timeBecomeInfectibleEvent, BecomeInfectibleEvent;
	event timeInfectionEvent, InfectionEvent;
};

TIME Mother::timeBecomeInfectibleEvent()
{
	TIME tEventTime = TIME_INFINITE;
	if (infectible == FALSE){
			tEventTime = WAIT(15);
	};
	return(tEventTime);
};

void Mother::BecomeInfectibleEvent()
{
	infectible = TRUE;
};

double IncidenceTableDraw(double x)
{
	double infection_time = pow(10,10);
	int indx = -1; //indx = 0 means incidence life = 14
	double prev_not_hiv_prob = 1;
	double not_hiv_prob = 1;
	double curr_not_hiv_prob = 1;
	int time_indx = 0;
	while (x <= not_hiv_prob & indx < 45)
	{
		indx++;
		time_indx = indx > 40 ? 40 : indx;
		prev_not_hiv_prob = not_hiv_prob;
		curr_not_hiv_prob = IncidenceTable[F][indx][time_indx];
		not_hiv_prob = not_hiv_prob * (1 - curr_not_hiv_prob);
	};
	if (x > not_hiv_prob)
	{
		infection_time = indx + ((x - not_hiv_prob) / (prev_not_hiv_prob + not_hiv_prob));
	};
	return(infection_time);
};

TIME Mother::timeInfectionEvent()
{
	TIME tEventTime = TIME_INFINITE;
	if (disease_status == HEALTHY & infectible == TRUE){
			tEventTime = WAIT(IncidenceTableDraw(RandUniform(2)));
	};
	return(tEventTime);
};

void Mother::InfectionEvent()
{
	disease_status = INFECTED;
	disease_status_detailed = INFECTED_;

	vdp_age_at_infection = vdp_age_int;

	int nIndex = {-1};
	Child *prChild = {NULL};
	while (prChild = mlChild->GetNext(nIndex+1, &nIndex))
	{
		prChild->Mother_Infect();
	}
};