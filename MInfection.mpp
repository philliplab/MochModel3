partition INCIDENCE_AGE_GROUPS
{
	0, 15, 20, 24, 29, 34, 39, 44, 49, 54, 59, 100
};

range INCIDENCE_RATES_SOURCE
{
	0,2
};

parameters
{
	INCIDENCE_RATES_SOURCE IncidenceRatesSource;
	double IncidenceRates[INCIDENCE_RATES_SOURCE][LIFE];
	double MinInfWait;
	double MaxInfWait;
};

parameter_group MotherIncidence
{ //EN Mothers' Mortality Parameters
	IncidenceRatesSource, IncidenceRates, MinInfWait, MaxInfWait
};

actor Mother            //EN Individual
{
	event timeInfectionEvent, InfectionEvent;
};

TIME Mother::timeInfectionEvent()
{
	TIME tEventTime = TIME_INFINITE;
	if (disease_status == HEALTHY){
		double curr_incidence = IncidenceRates[IncidenceRatesSource][integer_age];
		if (curr_incidence >= 1){
			tEventTime = WAIT(0);
		} else if (curr_incidence > 0){
			tEventTime = WAIT(-log(RandUniform(2)) / -log(1 - curr_incidence));
		};
	};
	return tEventTime;
};

void Mother::InfectionEvent()
{
	disease_status = INFECTED;
	vdp_age_at_infection = vdp_age_int;
	int nIndex = {-1};
	Child *prChild = {NULL};
	while (prChild = mlChild->GetNext(nIndex+1, &nIndex))
	{
		prChild->Mother_Infect();
	}
};